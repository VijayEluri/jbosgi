<?xml version="1.0" encoding="UTF-8"?>

<!-- ============================================================ -->
<!--  JBoss, the OpenSource J2EE webOS                            -->
<!--  Distributable under LGPL license.                           -->
<!--  See terms of license at http://www.gnu.org.                 -->
<!-- ============================================================ -->

<project default="jboss-as-setup">

  <description>Sets up JBoss AS for test suite</description>

  <!-- ================================================================== -->
  <!-- Init                                                               -->
  <!-- ================================================================== -->

  <target name="check-config" unless="jboss700.dir">
    <echo>
Please specify JBoss AS 7 root directory in property 'jboss700.dir'
For example:
             -Djboss700.dir=/clones/jbosgi-as/build/target
    </echo>
    <fail/>
  </target>

  <target name="jboss-as-setup" depends="check-config">
    <antcall target="copy-file">
      <param name="file" value="arquillian-osgi-bundle.jar"/>
    </antcall>
  	<antcall target="copy-file">
      <param name="file" value="jboss-osgi-jmx.jar"/>
    </antcall>

  	<!-- For the moment we deploy these as well -->
    <antcall target="copy-file">
      <param name="file" value="jboss-osgi-blueprint.jar"/>
    </antcall>      
  	<antcall target="copy-file">
      <param name="file" value="jboss-osgi-common-core.jar"/>
    </antcall>  	
    <antcall target="copy-file">
      <param name="file" value="org.apache.felix.log.jar"/>
    </antcall>      
    <antcall target="copy-file">
      <param name="file" value="jboss-osgi-jndi.jar"/>
    </antcall>      
  	
    <antcall target="copy-file">
      <param name="file" value="org.apache.felix.configadmin.jar"/>
    </antcall>      
    <antcall target="copy-file">
      <param name="file" value="org.apache.felix.eventadmin.jar"/>
    </antcall>      
    <antcall target="copy-file">
      <param name="file" value="org.apache.felix.log.jar"/>
    </antcall>      
    <antcall target="copy-file">
      <param name="file" value="jboss-osgi-http.jar"/>
    </antcall>      
    <antcall target="copy-file">
      <param name="file" value="jboss-osgi-webconsole.jar"/>
    </antcall>      

  	<!-- This one causes the following exception in AS7:
  	     missing requirement [Module[jboss-osgi-jaxb:2.1.10.SP5]] package; (&(package=org.jboss.osgi.xml)(version>=2.9.0)(!(version>=3.0.0)))
    <antcall target="copy-file">
      <param name="file" value="jboss-osgi-jaxb.jar"/>
    </antcall>
    -->      
  	
  	<!-- This one causes the following exception in AS7:
  	     missing requirement [Module[jboss-osgi-jta:4.6.1.SP2]] package; (&(package=javax.transaction)(version>=1.0.0)(!(version>=1.1.0)))
    <antcall target="copy-file">
      <param name="file" value="jboss-osgi-jta.jar"/>
    </antcall>      
    -->
    <antcall target="copy-file">
      <param name="file" value="jboss-osgi-reflect.jar"/>
    </antcall>      
  	
  	<!-- This one causes the following exception in AS7:
  	     missing requirement [Module[jboss-osgi-webapp:1.0.1]] package; (&(package=org.jboss.osgi.vfs)(version>=1.0.0)(!(version>=2.0.0)))
    <antcall target="copy-file">
      <param name="file" value="jboss-osgi-webapp.jar"/>
    </antcall>
    -->
  	
  	<!-- This one causes the following exception in AS7:
  	     java.lang.NoClassDefFoundError: javax/xml/parsers/FactoryConfigurationError  	     
    <antcall target="copy-file">
      <param name="file" value="jboss-osgi-xerces.jar"/>
    </antcall>      
    -->

    <antcall target="copy-file">
      <param name="file" value="org.apache.felix.metatype.jar"/>
    </antcall>      
  </target>

  <target name="copy-file">
    <echo message="Bundle: ${file}"/>

    <condition property="file.exist">
      <or>
        <available file="${jboss700.dir}/standalone/deployments/${file}"/>
        <available file="${jboss700.dir}/standalone/deployments/${file}.deployed"/>
      </or>
    </condition>
    <antcall target="copy-if-not-exist"/>
  </target>
	
  <target name="copy-if-not-exist" unless="file.exist">
    <copy file="target/test-libs/bundles/${file}"
          toDir="${jboss700.dir}/standalone/deployments"/>
  </target>
</project>
